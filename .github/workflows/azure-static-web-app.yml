name: Build and deploy Node.js app to Azure Web App - Laons

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: npm install and build
        run: |
          npm install
          npm run build

      - name: Copy web.config to dist
        run: cp web.config dist/

      - name: Zip artifact for deployment
        run: |
          cd dist
          zip -r ../release.zip ./*

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_85834A226F5C49D79442AC144E88219E }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_159F5278229B4F0F8CB5CD28EDA51DA7 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_706A89FFBF9C4D7EA7133C37D1E290E0 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'Laons'
          slot-name: 'Production'
          package: .

# name: Azure Static Web Apps CI/CD

# # Important: Before running this workflow, make sure to add the AZURE_STATIC_WEB_APPS_API_TOKEN
# # to your GitHub repository secrets. You can get this from your Azure Static Web App resource.

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened, closed]
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   build_and_deploy_job:
#     if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
#     runs-on: ubuntu-latest
#     name: Build and Deploy Job
#     permissions:
#       id-token: write #This is required for requesting the JWT
#       contents: read #This is required for actions/checkout

#     steps:
#       - uses: actions/checkout@v4
#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20.x'
#       - name: Build App
#         run: |
#           npm install
#           npm run build
      
#       - name: Login to Azure
#         uses: azure/login@v2
#         with:
#           client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_85834A226F5C49D79442AC144E88219E }}
#           tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_159F5278229B4F0F8CB5CD28EDA51DA7 }}
#           subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_706A89FFBF9C4D7EA7133C37D1E290E0 }}
      
#       # No Azure login step needed - the Static Web Apps deploy action uses its own authentication
#       - name: Deploy
#         id: builddeploy
#         uses: Azure/static-web-apps-deploy@v1
#         with:
#           azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
#           repo_token: ${{ secrets.GITHUB_TOKEN }}
#           action: "upload"
#           app_location: "/" # App source code path
#           api_location: "" # API source code path - leave empty if you don't have an API
#           output_location: "dist" # Built app content directory
          
#   close_pull_request_job:
#     if: github.event_name == 'pull_request' && github.event.action == 'closed'
#     runs-on: ubuntu-latest
#     name: Close Pull Request Job
#     permissions:
#       contents: read #This is required for actions/checkout
    
#     steps:
#       - name: Close Pull Request
#         id: closepullrequest
#         uses: Azure/static-web-apps-deploy@v1
#         with:
#           azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
#           action: "close"